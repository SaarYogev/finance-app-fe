buildscript {
    ext {
        kotlin_version = '1.3.41'
        kotlin_frontend_version = '0.0.45'
    }
    repositories {
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:$kotlin_frontend_version"
    }
}

apply plugin: 'kotlin2js'
apply plugin: 'org.jetbrains.kotlin.frontend'

repositories {
    jcenter()
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

ext {
    kotlinx_html_version = '0.6.6'
    kotlin_react_version = '16.8.6-pre.80-kotlin-1.3.41'
    kotlin_extensions_version = '1.0.1-pre.80-kotlin-1.3.41'
    kotlin_test_version = '1.3.41'
    ktor_version = '1.2.3'
    kotlinx_coroutines_version = '1.3.0-RC2'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains:kotlin-react-dom:$kotlin_react_version"
    compile "org.jetbrains:kotlin-extensions:$kotlin_extensions_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_test_version"
    compile "io.ktor:ktor-client-js:$ktor_version"
    compile "io.ktor:ktor-client-json-js:$ktor_version"
    compile "io.ktor:ktor-client-serialization-js:$ktor_version"
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

//sourceMaps = true

compileKotlin2Js {
    kotlinOptions {
        moduleKind = 'commonjs'
        sourceMap = true
    }
}

//compileTestKotlin2Js {
//    kotlinOptions {
//        moduleKind = 'commonjs'
//        sourceMap = true
//    }
//}

kotlinFrontend {
    npm {
        dependency '@date-io/core'
        dependency '@jetbrains/kotlin-extensions'
        dependency '@jetbrains/kotlin-react'
        dependency '@jetbrains/kotlin-webpack-plugin'
        dependency '@jetbrains/kotlinc-js-api'
        dependency '@material-ui/core'
        dependency '@material-ui/pickers'
        dependency 'core-js'
        dependency 'gh-pages'
        dependency 'kotlin'
        dependency 'kotlinx-coroutines-core'
        dependency 'prop-types'
        dependency 'react'
        dependency 'react-datetime-picker'
        dependency 'react-dom'
        dependency 'svg-inline-loader'
        dependency 'react-svg-loader'
        dependency 'svg-url-loader'
        dependency 'bufferutil'
        dependency 'utf-8-validate'
        dependency 'text-encoding'
        dependency 'fs'
        dependency 'react-google-login'
    }
    webpackBundle {
        bundleName = 'main'
        contentPath = file('src/main/web')
        port = 8080
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean